{"version":3,"file":"static/js/494.2ada4a5e.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/filter/filterSelectors.js","components/ContactElement/ContactElement.styled.jsx","components/ContactElement/ContactElement.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = ({ contacts }) => contacts.items;\n\nexport const selectLoading = ({ contacts }) => contacts.isLoading;\n\nexport const selectError = ({ contacts }) => contacts.error;;\n\n","import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormStyled = styled(Form)`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-bottom: 16px;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n`;\n\nexport const FieldStyled = styled(Field)`\n  padding: 10px;\n  border: 1px solid #f28f2c;\n  line-height: 1.11;\n  letter-spacing: 0.72px;\n  font-size: 20px;\n  color: #736c65;\n  font-weight: 600;\n\n  border-radius: 10px;\n  width: 400px;\n`;\n\nexport const Message = styled(ErrorMessage)`\n  font-size: 24px;\n  color: #f28f2c;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 15px;\n  background-color:orange;\n  color: white;\n\n  border: none;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  cursor: pointer;\n\n  font-size: 24px;\n\n  transition: background-color 0.3s ease, color 0.3s ease;\n  width: 280px;\n\n  &:active {\n    background-color: grey;\n  }\n`;","import { Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nimport {\n  FormStyled,\n  FieldStyled,\n  Message,\n  Label,\n  Button,\n} from './ContactForm.styled';\n\nconst schema = object().shape({\n  name: string()\n    .trim()\n    .matches(/^[a-zA-Z\\s]+$/, 'Invalid name format')\n    .required('This field is required'),\n  number: string()\n    .trim()\n    .matches(\n      /^[^a-zA-Z]*\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}[^a-zA-Z]*$/,\n      'Invalid phone number format'\n    )\n    .required('This field is required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={({ name, number }, actions) => {\n        if (\n          contacts.find(\n            ({ name: oldName }) => oldName.toLowerCase() === name.toLowerCase()\n          )\n        ) {\n\n          Report.failure(\n            'Notiflix Failure',\n            `${name} is already in contacts`,\n            'Okay')\n      \n          actions.resetForm();\n          return;\n        }\n        if (\n          contacts.find(\n            ({ number: oldNumber }) =>\n              oldNumber.toLowerCase() === number.toLowerCase()\n          )\n        ) {\n          Report.success(\n            'Notiflix Success',\n            `${number} is already in contacts`,\n            'Okay'\n          );\n          actions.resetForm();\n          return;\n        }\n        Report.success(\n          'Notiflix Success',\n          `${name} added to your contact list`,\n          'Okay'\n        );\n\n        dispatch(addContact({ name, number }));\n        actions.resetForm();\n      }}\n    >\n      <FormStyled>\n        <div>\n          <Label htmlFor=\"name\">Please, enter name</Label>\n\n          <FieldStyled type=\"text\" name=\"name\" placeholder=\" \" />\n          <Message name=\"name\" component=\"div\"></Message>\n        </div>\n        <div>\n          <Label htmlFor=\"name\">Please, enter number</Label>\n\n          <FieldStyled type=\"text\" name=\"number\" placeholder=\" \" />\n          <Message name=\"number\" component=\"div\"></Message>\n        </div>\n        <Button type=\"submit\">Add contact</Button>\n      </FormStyled>\n    </Formik>\n  );\n};\n","export const selectFilter = ({ filter }) => filter.filter;","import styled from 'styled-components';\n\nexport const ContactElementBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  text-transform: uppercase;\n  text-align: center;\n\n  color: grey;\n  text-shadow: 1px 1px 1px #d1c4c4;\n  background-color: white;\n\n  font-size: 16px;\n  margin-bottom: 20px;\n  margin-left: 20px;\n  padding: 8px;\n  border: 1px solid #f28f2c;\n  cursor: pointer;\n\n  border-radius: 10px;\n  box-shadow: rgba(216, 225, 215, 0.24) 0px 3px 8px;\n`;\n","import { ContactElementBtn } from './ContactElement.styled';\n\nexport const ContactElement = ({ name, number, onDelete }) => {\n  return (\n    <li>\n      {name}: {number}\n      <ContactElementBtn type=\"button\" onClick={onDelete}>\n        Delete\n      </ContactElementBtn>\n    </li>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const ContactWrap = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  gap: 16px;\n  margin-top: 20px;\n  padding: 0;\n\n  list-style: none;\n`;\n\n// export const ContactListItem = styled.li``;\n\nexport const Span = styled.span`\n  font-size: 24px;\n  padding-right: 12px;\n`;\n\nexport const ContactListBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  text-transform: uppercase;\n  text-align: center;\n\n  color: grey;\n  text-shadow: 1px 1px 1px #d1c4c4;\n  background-color: white;\n\n  font-size: 16px;\n  margin-bottom: 20px;\n  padding: 8px;\n  border: 1px solid #f28f2c;\n  cursor: pointer;\n\n  border-radius: 10px;\n  box-shadow: rgba(216, 225, 215, 0.24) 0px 3px 8px;\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/contacts/contactsOperations';\nimport {\n  selectContacts,\n  selectLoading,\n  selectError,\n} from '../../redux/contacts/contactsSelectors';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\n\nimport { ContactElement } from 'components/ContactElement/ContactElement';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { ContactWrap } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const isError = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const activeContacts = filterContacts();\n  const isListEmpty = !activeContacts.length && !isLoading && !isError;\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n  \n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {isListEmpty && <p>No contact details</p>}\n      {activeContacts.length > 0 && (\n        <ContactWrap>\n          {activeContacts.map(({ id, name, number }) => (\n            <ContactElement\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onDelete={() => handleDeleteContact(id)}\n            />\n          ))}\n        </ContactWrap>\n      )}\n    </>\n  );\n};\n","\nimport styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-size: 24px;\n  color: #ec8014;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border: 1px solid #f28f2c;\n  line-height: 1.11;\n  letter-spacing: 0.72px;\n  font-size: 20px;\n\n  color: #736c65;\n\n  border-radius: 10px;\n  width: 375px;\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\n\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const filterId = nanoid();\n\n  const onChangeFilter = e => {\n\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      <Label>\n        <Input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={filter}\n          name=\"filter\"\n          id={filterId}\n          onChange={onChangeFilter}\n        />\n      </Label>\n    </>\n  );\n};\n","import { Navigate } from 'react-router-dom';\n\nimport { useAuth } from 'hooks/useAuth';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\n\nconst Contacts = ( ) => {\n  const { isLoggedIn} = useAuth();\n\n  return (\n    <>\n    {isLoggedIn ? (\n      <>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </>\n    ) : (\n      <Navigate to=\"/login\" />\n    )}\n  </>\n);\n};\n\nexport default Contacts\n"],"names":["selectContacts","_ref","contacts","items","selectLoading","_ref2","isLoading","selectError","_ref3","error","FormStyled","styled","Form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","FieldStyled","Field","_templateObject3","Message","ErrorMessage","_templateObject4","Button","button","_templateObject5","schema","object","shape","name","string","trim","matches","required","number","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","actions","find","oldName","toLowerCase","Report","failure","concat","resetForm","oldNumber","success","addContact","children","_jsxs","htmlFor","type","placeholder","component","selectFilter","filter","ContactElementBtn","ContactElement","onDelete","onClick","ContactWrap","ul","ContactList","span","isError","useEffect","fetchContacts","activeContacts","filterContacts","normalizedFilter","includes","isListEmpty","length","_Fragment","Loader","map","id","deleteContact","handleDeleteContact","Input","input","Filter","filterId","nanoid","value","onChange","e","setFilter","currentTarget","Contacts","isLoggedIn","useAuth","Navigate","to"],"sourceRoot":""}